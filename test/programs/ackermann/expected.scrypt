

contract Ackermann {
	int a;
	int b;
	function ackermann(int m ,int n ): int {
		bytes stk = num2bin(m, 1);
				loop(14) {
		if (len(stk) > 0)  {
		bytes top = stk[0:  1];
				m = unpack(top);
				stk = stk[1:  len(stk)];
		if (m == 0)  {
				n = n + m + 1;

	} else if (n == 0)  {
				n = n + 1;
				m = m - 1;
				stk = num2bin(m, 1) + stk;

	} else  {
				stk = num2bin(m - 1, 1) + stk;
				stk = num2bin(m, 1) + stk;
				n = n - 1;

	}

	}

	}
		return  n;

	}
	public function unlock(int y ) {
				require(y == this.ackermann(this.a, this.b));

	}
}